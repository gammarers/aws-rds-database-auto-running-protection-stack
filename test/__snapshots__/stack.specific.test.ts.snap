// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack Specific Testing Should match snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "DBClusterEvent9BF26607": {
      "Properties": {
        "Description": "db cluster running event catch rule",
        "EventPattern": {
          "detail": {
            "EventID": [
              "RDS-EVENT-0153",
            ],
          },
          "detail-type": [
            "RDS DB Cluster Event",
          ],
          "source": [
            "aws.rds",
          ],
        },
        "Name": "rds-db-cluster-running-event-catch-6b53905e-rule",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "StateMachine2E01A3A5",
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "f1": "$",
              },
              "InputTemplate": "{"event":<f1>,"params":{"tagKey":"AutoRunningStop","tagValues":["YES"]}}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "EventExecRole849D1777",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DBInstanceEvent92EBE80A": {
      "Properties": {
        "Description": "rds db instance running event catch rule.",
        "EventPattern": {
          "detail": {
            "EventID": [
              "RDS-EVENT-0154",
            ],
          },
          "detail-type": [
            "RDS DB Instance Event",
          ],
          "source": [
            "aws.rds",
          ],
        },
        "Name": "rds-db-instance-running-event-catch-6b53905e-rule",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "StateMachine2E01A3A5",
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "f1": "$",
              },
              "InputTemplate": "{"event":<f1>,"params":{"tagKey":"AutoRunningStop","tagValues":["YES"]}}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "EventExecRole849D1777",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "EventExecRole849D1777": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "db auto start catch with start state machine event role",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": {
                    "Ref": "StateMachine2E01A3A5",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "state-machine-exec",
          },
        ],
        "RoleName": "rds-db-auto-running-catch-event-6b53905e-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "EventExecRoleDefaultPolicyB3284D41": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StateMachine2E01A3A5",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EventExecRoleDefaultPolicyB3284D41",
        "Roles": [
          {
            "Ref": "EventExecRole849D1777",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "NotificationTopicEB7A0DF1": {
      "Type": "AWS::SNS::Topic",
    },
    "NotificationTopicbarexamplecom9EB28562": {
      "Properties": {
        "Endpoint": "bar@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "NotificationTopicfooexamplecom623834B6": {
      "Properties": {
        "Endpoint": "foo@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SNSSlackMessageLambdaSubscription5EE4F2B8": {
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionA36ABB02",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "SNSSlackMessageLambdaSubscriptionLambdaExecutionRoleC5480D3F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "secretsmanager:GetSecretValue",
                  "Effect": "Allow",
                  "Resource": "arn:aws:secretsmanager:us-east-1:123456789012:secret:example/slack/webhook*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "get-secret-policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionA36ABB02": {
      "DependsOn": [
        "SNSSlackMessageLambdaSubscriptionLambdaExecutionRoleC5480D3F",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "a435d70adef1fa1ec7aed58e5958db93b87bd88f54841ddbfbaae6116373536c.zip",
        },
        "Description": "Send Slack message function",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PARAMETERS_SECRETS_EXTENSION_CACHE_ENABLED": "true",
            "PARAMETERS_SECRETS_EXTENSION_CACHE_SIZE": "500",
            "PARAMETERS_SECRETS_EXTENSION_HTTP_PORT": "2773",
            "PARAMETERS_SECRETS_EXTENSION_LOG_LEVEL": "info",
            "PARAMETERS_SECRETS_EXTENSION_MAX_CONNECTIONS": "3",
            "SECRETS_MANAGER_TIMEOUT_MILLIS": "0",
            "SECRETS_MANAGER_TTL": "300",
            "SLACK_WEBOOK_SECRET_NAME": "example/slack/webhook",
            "SSM_PARAMETER_STORE_TIMEOUT_MILLIS": "0",
            "SSM_PARAMETER_STORE_TTL": "300",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          "arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension-Arm64:4",
        ],
        "LoggingConfig": {
          "ApplicationLogLevel": "INFO",
          "LogFormat": "JSON",
          "LogGroup": {
            "Ref": "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionLogGroup791AC086",
          },
          "SystemLogLevel": "INFO",
        },
        "Role": {
          "Fn::GetAtt": [
            "SNSSlackMessageLambdaSubscriptionLambdaExecutionRoleC5480D3F",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionInvokeFunctionFromSNS7E7D00CD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionA36ABB02",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "NotificationTopicEB7A0DF1",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "SNSSlackMessageLambdaSubscriptionSendSlackMessageFunctionLogGroup791AC086": {
      "DeletionPolicy": "RetainExceptOnCreate",
      "Properties": {
        "RetentionInDays": 90,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StateMachine2E01A3A5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StateMachineRoleDefaultPolicyDF1E6607",
        "StateMachineRoleB840431D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"StartingWait","States":{"StartingWait":{"Type":"Wait","Seconds":60,"Next":"StringMappingDefinition"},"StringMappingDefinition":{"Type":"Pass","Result":{"SourceType":[{"key":"CLUSTER","value":"Cluster"},{"key":"DB_INSTANCE","value":"Instance"}]},"ResultPath":"$.definition.mapping","Next":"DescribeTypeChoice"},"DescribeTypeChoice":{"Type":"Choice","Choices":[{"And":[{"Variable":"$.event.detail-type","StringEquals":"RDS DB Instance Event"},{"Variable":"$.event.detail.SourceType","StringEquals":"DB_INSTANCE"},{"Variable":"$.event.detail.EventID","StringEquals":"RDS-EVENT-0154"}],"Next":"DescribeDBInstances"},{"And":[{"Variable":"$.event.detail-type","StringEquals":"RDS DB Cluster Event"},{"Variable":"$.event.detail.SourceType","StringEquals":"CLUSTER"},{"Variable":"$.event.detail.EventID","StringEquals":"RDS-EVENT-0153"}],"Next":"DescribeDBClusters"}],"Default":"UnknownType"},"StatusChangeWait":{"Type":"Wait","Seconds":300,"Next":"DescribeTypeChoice"},"StopDBInstance":{"Next":"StatusChangeWait","Type":"Task","ResultPath":"$.result.stop","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:stopDBInstance","Parameters":{"DbInstanceIdentifier.$":"$.event.detail.SourceIdentifier"}},"StatusChoice":{"Type":"Choice","Choices":[{"And":[{"Variable":"$.event.detail-type","StringEquals":"RDS DB Instance Event"},{"Variable":"$.event.detail.SourceType","StringEquals":"DB_INSTANCE"},{"Variable":"$.event.detail.EventID","StringEquals":"RDS-EVENT-0154"},{"Variable":"$.result.describe.status","StringEquals":"available"}],"Next":"StopDBInstance"},{"And":[{"Variable":"$.event.detail-type","StringEquals":"RDS DB Cluster Event"},{"Variable":"$.event.detail.SourceType","StringEquals":"CLUSTER"},{"Variable":"$.event.detail.EventID","StringEquals":"RDS-EVENT-0153"},{"Variable":"$.result.describe.status","StringEquals":"available"}],"Next":"StopDBCluster"},{"And":[{"Or":[{"And":[{"Variable":"$.event.detail-type","StringEquals":"RDS DB Instance Event"},{"Variable":"$.event.detail.SourceType","StringEquals":"DB_INSTANCE"},{"Variable":"$.event.detail.EventID","StringEquals":"RDS-EVENT-0154"}]},{"And":[{"Variable":"$.event.detail-type","StringEquals":"RDS DB Cluster Event"},{"Variable":"$.event.detail.SourceType","StringEquals":"CLUSTER"},{"Variable":"$.event.detail.EventID","StringEquals":"RDS-EVENT-0153"}]}]},{"Variable":"$.result.describe.status","StringEquals":"stopped"}],"Next":"PrepareTopicValue"},{"Or":[{"Variable":"$.result.describe.status","StringEquals":"starting"},{"Variable":"$.result.describe.status","StringEquals":"configuring-enhanced-monitoring"},{"Variable":"$.result.describe.status","StringEquals":"backing-up"},{"Variable":"$.result.describe.status","StringEquals":"modifying"},{"Variable":"$.result.describe.status","StringEquals":"stopping"}],"Next":"StatusChangeWait"}],"Default":"StatusFail"},"FilterTagChoise":{"Type":"Choice","Choices":[{"Variable":"$.check.tag.isContain","BooleanEquals":true,"Next":"StatusChoice"}],"Default":"NoTagMatch"},"ContainTagVlue":{"Type":"Pass","ResultPath":"$.check.tag","Parameters":{"isContain.$":"States.ArrayContains($.params.tagValues, States.ArrayGetItem($.result.describe.tags[?(@.Key == $.params.tagKey)].Value, 0))"},"Next":"FilterTagChoise"},"ExistTagChoide":{"Type":"Choice","Choices":[{"Variable":"$.result.describe.tags","IsPresent":true,"Next":"ContainTagVlue"}],"Default":"NoTagsFound"},"DescribeDBInstances":{"Next":"ExistTagChoide","Type":"Task","ResultPath":"$.result.describe","ResultSelector":{"status.$":"$.DbInstances[0].DbInstanceStatus","identifier.$":"$.DbInstances[0].DbInstanceIdentifier","tags.$":"$.DbInstances[0].TagList"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:describeDBInstances","Parameters":{"DbInstanceIdentifier.$":"$.event.detail.SourceIdentifier"}},"DescribeDBClusters":{"Next":"ExistTagChoide","Type":"Task","ResultPath":"$.result.describe","ResultSelector":{"status.$":"$.DbClusters[0].Status","identifier.$":"$.DbClusters[0].DbClusterIdentifier","tags.$":"$.DbClusters[0].TagList"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:describeDBClusters","Parameters":{"DbClusterIdentifier.$":"$.event.detail.SourceIdentifier"}},"NoTagsFound":{"Type":"Pass","Comment":"no tags found","End":true},"NoTagMatch":{"Type":"Pass","Comment":"no tag match","End":true},"StatusFail":{"Type":"Fail","Cause":"db instance or cluster status fail."},"StopDBCluster":{"Next":"StatusChangeWait","Type":"Task","ResultPath":"$.result.stop","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:rds:stopDBCluster","Parameters":{"DbClusterIdentifier.$":"$.event.detail.SourceIdentifier"}},"PrepareTopicValue":{"Type":"Pass","ResultPath":"$.prepare.topic.values","Parameters":{"account.$":"States.ArrayGetItem(States.StringSplit($.event.detail.SourceArn, ':'), 4)","region.$":"States.ArrayGetItem(States.StringSplit($.event.detail.SourceArn, ':'), 3)"},"Next":"GenerateConsoleLink"},"GenerateConsoleLink":{"Type":"Pass","ResultPath":"$.Generate.Link","Parameters":{"Value.$":"States.Format('https://{}.console.aws.amazon.com/rds/home#database', $.prepare.topic.values.region)"},"Next":"GenerateTopicMessage"},"GenerateTopicMessage":{"Type":"Pass","ResultPath":"$.Generate.Topic","Parameters":{"Subject.$":"States.Format('😴 [STOPPED] AWS RDS DB {} Auto Running Protected Notification [{}][{}]', States.ArrayGetItem($.definition.mapping.SourceType[?(@.key == $.event.detail.SourceType)].value, 0), $.prepare.topic.values.account, $.prepare.topic.values.region)","TextMessage.$":"States.Format('Account : {}\\nRegion : {}\\nType : {}\\nIdentifier : {}', $.prepare.topic.values.account, $.prepare.topic.values.region, $.event.detail.SourceType, $.event.detail.SourceIdentifier)","SlackJsonMessage":{"attachments":[{"color":"#36a64f","pretext.$":"States.Format('😴 Successfully stopped the automatically running RDS {} {}.', $.event.detail.SourceType, $.event.detail.SourceIdentifier)","fields":[{"title":"Account","value.$":"$.prepare.topic.values.account","short":true},{"title":"Region","value.$":"$.prepare.topic.values.region","short":true},{"title":"Type","value.$":"$.event.detail.SourceType","short":true},{"title":"Identifier","value.$":"$.event.detail.SourceIdentifier","short":true}]}]}},"Next":"PublishMessage"},"PublishMessage":{"Next":"Succeed","Type":"Task","ResultPath":"$.snsResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::sns:publish","Parameters":{"TopicArn":"",
              {
                "Ref": "NotificationTopicEB7A0DF1",
              },
              "","Message":{"default.$":"$.Generate.Topic.TextMessage","email.$":"$.Generate.Topic.TextMessage","lambda.$":"States.JsonToString($.Generate.Topic.SlackJsonMessage)"},"MessageStructure":"json","Subject.$":"$.Generate.Topic.Subject"}},"Succeed":{"Type":"Succeed"},"UnknownType":{"Type":"Fail"}}}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::GetAtt": [
                    "StateMachineLogGroup15B91BCB",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn",
          ],
        },
        "StateMachineName": "rds-db-auto-running-stop-6b53905e-state-machine",
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StateMachineLogGroup15B91BCB": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": "/aws/states/rds-db-auto-running-stop-6b53905e-state-machine",
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StateMachineRoleB840431D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "rds database auto running stop state machine role.",
        "RoleName": "rds-db-auto-running-stop-state-machine-6b53905e-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineRoleDefaultPolicyDF1E6607": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "rds:stopDBInstance",
              "Effect": "Allow",
              "Resource": "arn:aws:rds:*:123456789012:db:*",
            },
            {
              "Action": "rds:describeDBInstances",
              "Effect": "Allow",
              "Resource": "arn:aws:rds:*:123456789012:db:*",
            },
            {
              "Action": "rds:describeDBClusters",
              "Effect": "Allow",
              "Resource": "arn:aws:rds:*:123456789012:cluster:*",
            },
            {
              "Action": "rds:stopDBCluster",
              "Effect": "Allow",
              "Resource": "arn:aws:rds:*:123456789012:cluster:*",
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "NotificationTopicEB7A0DF1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "rds-db-auto-running-stop-state-machine-6b53905e-policy",
        "Roles": [
          {
            "Ref": "StateMachineRoleB840431D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
